<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZgBoKmYsR2JmLEf+ZixH/mYsR/5mLEf+ZihHwmYsR/5mL
        Ef+ZixH/mYsR/JmMEmQAAAAAAAAAAAAAAAAAAAAAn48QEJmKEYWZixHkmYsR/5iLEvaYjBB8mI4SSJmK
        EeOZixH/mYsR/JqLEbWZihJGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqqoAA5iKEUqYihK8mooRTJaJ
        FCeZjBLKmYsRe5eOExsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACajRQmmYsS2JmL
        Ec6ZjBGHmYsQ6ZmLEI+ZiBEPqoAABpqMEG+YixF3mIsRd5iLEXeZiBEeAAAAAAAAAACaixJWmIsR9pmK
        EeCAgAAEAAAAAJmJEFCZixHxmYoR0puQFhebiw9CmosRiJqLEYiaixGIlo8PIgAAAACajRI6mYsR+piL
        EOmbiw8hAAAAAAAAAAAAAAAAmIkRqZiLEfuZixHAAAAAAJmLEoCZixKAmYsSgJeHECAAAAAAmIwSn5mL
        Ef+YiRCrAAAAAAAAAAAAAAAAAAAAAJuQFheaixHvmYsR+4CAAASZixKAmYsSgJmLEoCXhxAgAAAAAJiJ
        DzSZixH/mYsR5AAAAAAAAAAAAAAAAAAAAACbiBBemYsR/pmKEd2ajRQmmIsRd5iLEXeYixF3mYgRHgAA
        AAAAAAAAmYsRyJmLEfuZixGElIYNEwAAAAAAAAAAmosQjZmLEf+YjBKfmYwRPJqLEYiaixGImosRiJaP
        DyIAAAAAAAAAAJqMEF2ZixH/mYsR/5mLEeuaixNEmYsRxpqKEeOZixH/mIwQPgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACqgAAGmIsR4pmLEf+ZixH/mYsR+piKEf+ZixH/mYsRsgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJqMEzWZixHymYsR/5mLEf+ZixH/mYsRw5+PEBAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlIYNE5qKEGCYixJymIoSSP//AAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAgB8AAIYfAAD2/wAA8H8AAOcxAADPEQAAj5EAAM+f
        AADHEQAA4j8AAOA/AADwfwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJqMEH6ZixH2mYsR/5mL
        Ef+ZixH/mYsR/5mLEf+ZixH/mYsR/5mLEf+ZixHzmYsR/5mLEf+ZixH/mYsR/5mLEf+ZixH/mYsR/5mL
        Ef+ZixH1mIwQfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZig8jmYsR/pmL
        Ef+ZixH/mYsR/5mLEf+ZixH/mYsR/5mLEf+ZixH/mYsR/5qLEPmZixH/mYsR/5mLEf+ZixH/mYsR/5mL
        Ef+ZixH/mYsR/5mLEf+ZixH9mYoPIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmJ
        EEGZixHemYsR/5mLEf+ZixH/mYsR/5mLEf+ZixH/mYsR/5qLEeqYixGamYwPiZiLEZqZixHrmYsR/5mL
        Ef+ZixH/mYsR/5mLEf+ZixH/mYsR/5mLEd6XixBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//AAGXixBAmYsSoJmLEfOZixH/mYsR/5mLEf+ZixH/mYsRbAAAAAAAAAAAAAAAAJiK
        EG2ZixH/mYsR/5mLEf+ZixH/mYsR85iMEp+aihA///8AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmYwNFJqMEG+ZixLMmYsR/5mLEf+ZihF4AAAAAAAA
        AAAAAAAAmosReZmLEf+ZixH/mYsSzJqMEG+ZjA0UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbiw8hmYsR/JmK
        EYeaihFMmY0RZ5mLEUuYixGImIoR+5uLDyEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJaJ
        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
        EeGYjBIqmYsRzZmLEf+aihHqmYsR/5mLEf+ZixH/mIoRSgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdiRQamYsR9JmLEf+ZixH/mYsR/5mL
        Ef+ZixH/mYsR/5mLEeKZixH5mYsR/5mLEf+ZixH/mYsR/5qLEbUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYjBB8mYsR/5mL
        Ef+ZixH/mYsR/5mLEf+ZixH/mYsR/5mLEf+ZixH/mYsR/5mLEf+ZixHzmYoPIwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJKS
        AAeZjBG+mYsR/5mLEf+ZixH/mYsR/5mLEf+ZixH/mYsR/5mLEf+ZixH/mYsR+JmLEUsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJKSEg6YixHCmYsR/5mLEf+ZixH/mYsR/5mLEf+ZixH/mYsR/5mMEd+YjBA+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAAKYjBFZmooQupmLEeqZixHumYsR7JmMEb6ajBFqjo4cCQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////gAAP/wAAB/8AAAf/wPgf//j4///+c
        ////gP///hw8Afw+HgH4fw//8P+H/+D/gwHh/8MB4f/D/+D/g//w/4IB8P+GAfg/h//4DIf/+AQP//wA
        D//+AB///gA///8Af///wf//////////////////
</value>
  </data>
</root>